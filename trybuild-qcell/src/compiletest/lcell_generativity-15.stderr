error[E0277]: `Rc<i32>` cannot be sent between threads safely
    --> src/compiletest/lcell_generativity-15.rs:13:17
     |
13   |         s.spawn(move |_| assert_eq!(100, **owner.ro(&cell))).join().unwrap(); // Compile fail
     |           ----- --------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |           |     |
     |           |     `Rc<i32>` cannot be sent between threads safely
     |           |     within this `[closure@$DIR/src/compiletest/lcell_generativity-15.rs:13:17: 13:25]`
     |           required by a bound introduced by this call
     |
     = help: within `[closure@$DIR/src/compiletest/lcell_generativity-15.rs:13:17: 13:25]`, the trait `Send` is not implemented for `Rc<i32>`
note: required because it appears within the type `UnsafeCell<Rc<i32>>`
    --> $RUST/core/src/cell.rs
     |
     | pub struct UnsafeCell<T: ?Sized> {
     |            ^^^^^^^^^^
note: required because it appears within the type `LCell<'_, Rc<i32>>`
    --> $QCELL/src/lcell.rs
     |
     | pub struct LCell<'id, T: ?Sized> {
     |            ^^^^^
note: required because it's used within this closure
    --> src/compiletest/lcell_generativity-15.rs:13:17
     |
13   |         s.spawn(move |_| assert_eq!(100, **owner.ro(&cell))).join().unwrap(); // Compile fail
     |                 ^^^^^^^^
note: required by a bound in `crossbeam::thread::Scope::<'env>::spawn`
    --> /home/jim/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-utils-0.7.2/src/thread.rs:243:12
     |
240  |     pub fn spawn<'scope, F, T>(&'scope self, f: F) -> ScopedJoinHandle<'scope, T>
     |            ----- required by a bound in this associated function
...
243  |         F: Send + 'env,
     |            ^^^^ required by this bound in `Scope::<'env>::spawn`
