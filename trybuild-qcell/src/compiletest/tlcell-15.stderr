error[E0277]: `Rc<i32>` cannot be sent between threads safely
    --> src/compiletest/tlcell-15.rs:15:24
     |
15   |       std::thread::spawn(move || {    // Compile fail
     |       ------------------ ^------
     |       |                  |
     |  _____|__________________within this `[closure@$DIR/src/compiletest/tlcell-15.rs:15:24: 15:31]`
     | |     |
     | |     required by a bound introduced by this call
16   | |         assert_eq!(100, **owner.ro(&cell));
17   | |     }).join();
     | |_____^ `Rc<i32>` cannot be sent between threads safely
     |
     = help: within `[closure@$DIR/src/compiletest/tlcell-15.rs:15:24: 15:31]`, the trait `Send` is not implemented for `Rc<i32>`
note: required because it appears within the type `UnsafeCell<Rc<i32>>`
    --> $RUST/core/src/cell.rs
     |
     | pub struct UnsafeCell<T: ?Sized> {
     |            ^^^^^^^^^^
note: required because it appears within the type `TLCell<Marker, Rc<i32>>`
    --> $QCELL/src/tlcell.rs
     |
     | pub struct TLCell<Q, T: ?Sized> {
     |            ^^^^^^
note: required because it's used within this closure
    --> src/compiletest/tlcell-15.rs:15:24
     |
15   |     std::thread::spawn(move || {    // Compile fail
     |                        ^^^^^^^
note: required by a bound in `spawn`
    --> $RUST/std/src/thread/mod.rs
     |
     | pub fn spawn<F, T>(f: F) -> JoinHandle<T>
     |        ----- required by a bound in this function
...
     |     F: Send + 'static,
     |        ^^^^ required by this bound in `spawn`

error[E0277]: `*const ()` cannot be sent between threads safely
   --> src/compiletest/tlcell-15.rs:15:24
    |
15  |       std::thread::spawn(move || {    // Compile fail
    |       ------------------ ^------
    |       |                  |
    |  _____|__________________within this `[closure@$DIR/src/compiletest/tlcell-15.rs:15:24: 15:31]`
    | |     |
    | |     required by a bound introduced by this call
16  | |         assert_eq!(100, **owner.ro(&cell));
17  | |     }).join();
    | |_____^ `*const ()` cannot be sent between threads safely
    |
    = help: within `[closure@$DIR/src/compiletest/tlcell-15.rs:15:24: 15:31]`, the trait `Send` is not implemented for `*const ()`
note: required because it appears within the type `NotSendOrSync`
   --> $QCELL/src/tlcell.rs
    |
    | struct NotSendOrSync(*const ());
    |        ^^^^^^^^^^^^^
note: required because it appears within the type `PhantomData<NotSendOrSync>`
   --> $RUST/core/src/marker.rs
    |
    | pub struct PhantomData<T: ?Sized>;
    |            ^^^^^^^^^^^
note: required because it appears within the type `TLCellOwner<Marker>`
   --> $QCELL/src/tlcell.rs
    |
    | pub struct TLCellOwner<Q: 'static> {
    |            ^^^^^^^^^^^
note: required because it's used within this closure
   --> src/compiletest/tlcell-15.rs:15:24
    |
15  |     std::thread::spawn(move || {    // Compile fail
    |                        ^^^^^^^
note: required by a bound in `spawn`
   --> $RUST/std/src/thread/mod.rs
    |
    | pub fn spawn<F, T>(f: F) -> JoinHandle<T>
    |        ----- required by a bound in this function
...
    |     F: Send + 'static,
    |        ^^^^ required by this bound in `spawn`
